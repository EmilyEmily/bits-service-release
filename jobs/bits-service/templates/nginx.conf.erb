# deployment bits-service nginx.conf
user  vcap vcap;

error_log <%= p("bits-service.nginx.error_log_destination") %> <%= p("bits-service.nginx.error_log_level") %>;
pid       /var/vcap/sys/run/nginx_bits/nginx.pid;

events {
  worker_connections  8192;
  use epoll;
}

http {
  default_type  text/html;
  server_tokens off;

  log_format main  '<%= p("bits-service.nginx.access_log_format").chomp %>';

  access_log  <%= p("bits-service.nginx.access_log_destination") %> main;

  sendfile             on;  #enable use of sendfile()
  tcp_nopush           on;
  tcp_nodelay          on;  #disable nagel's algorithm

  keepalive_timeout  75 20; #inherited from router

  # Allow large uploads
  client_max_body_size <%= p("bits-service.max_body_size") %>;

  upstream bits_service {
    server unix:/var/vcap/sys/run/bits-service/bits-service.sock;
  }

  server {
    listen    80;
    server_name  _;
    server_name_in_redirect off;

    # resource downloads
    location ~ "/(<%= p("bits-service.buildpacks.directory_key") %>|<%= p("bits-service.droplets.directory_key") %>|<%= p("bits-service.packages.directory_key") %>|<%= p("bits-service.buildpack_cache.directory_key") %>)/\w{2}/\w{2}/.*" {
      internal;
      root /var/vcap/store/bits-service/;
      proxy_pass_header HTTP_X_VCAP_REQUEST_ID;
      add_header HTTP_X_VCAP_REQUEST_ID $HTTP_X_VCAP_REQUEST_ID;
    }

    location ~ ^/buildpack_cache {
      if ($request_method != PUT ) {
        proxy_pass http://bits_service;
        break;
      }

      # Pass altered request body to this location
      upload_pass @bits_service;
      upload_pass_args on;

      # Store files to this directory
      upload_store /var/vcap/data/bits-service/tmp/uploads;

      # No limit for output body forwarded
      upload_max_output_body_len 0;

      # Allow uploaded files to be read only by user
      upload_store_access user:r;

      # Set specified fields in request body
      upload_set_form_field "${upload_field_name}_name" $upload_file_name;
      upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;

      # on any error, delete uploaded files
      upload_cleanup 400-505;
    }

    location ~ ^/(buildpacks|droplets|app_stash/entries|packages)$ {
      # POSTs

      # Pass altered request body to this location
      upload_pass @bits_service;
      upload_pass_args on;

      # Store files to this directory
      upload_store /var/vcap/data/bits-service/tmp/uploads;

      # No limit for output body forwarded
      upload_max_output_body_len 0;

      # Allow uploaded files to be read only by user
      upload_store_access user:r;

      # Set specified fields in request body
      upload_set_form_field "${upload_field_name}_name" $upload_file_name;
      upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;

      # on any error, delete uploaded files
      upload_cleanup 400-505;
    }

    location ~ ^/(buildpacks|droplets|app_stash|packages) {
      proxy_pass http://bits_service;
    }

    # Pass altered request body to a backend
    location @bits_service {
      proxy_pass http://unix:/var/vcap/sys/run/bits-service/bits-service.sock;
    }

    location /nginx_status {
      stub_status on;
      access_log  /var/vcap/sys/log/nginx_bits/nginx_status.access.log main;
      allow 127.0.0.1;
      deny all;
    }
  }
}
