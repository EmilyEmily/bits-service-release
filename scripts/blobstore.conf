upstream blob_url_signer {
  server unix:/tmp/blobstore_url_signer/signer.sock;
}

# Internal server
server {
  listen      127.0.0.1:4444 ssl;
  ssl_certificate     system-test-config/blobstore.crt;
  ssl_certificate_key system-test-config/blobstore.key;

  ssl_ciphers DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
  ssl_protocols TLSv1.2;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;

  root        /tmp/webdav/store/shared/;

  access_log /tmp/webdav/log/blobstore/internal_access.log;
  error_log  /tmp/webdav/log/blobstore/internal_error.log;

  location /admin/ {
    auth_basic "Blobstore Admin";
    auth_basic_user_file write_users;

    dav_methods DELETE PUT COPY;
    dav_ext_methods PROPFIND;

    create_full_put_path on;

    alias /tmp/webdav/store/shared/;
  }

  location /sign {
    auth_basic "Blobstore Signing";
    auth_basic_user_file write_users;

    proxy_pass http://blob_url_signer;
  }

  # ensure the contents of this location block always match the public server /read/ location block
  location /read/ {
    if ( $request_method !~ ^(GET|HEAD)$ ) {
      return 405;
    }

    secure_link $arg_md5,$arg_expires;
    secure_link_md5 "$secure_link_expires$uri BLOBSTORE_SECURE_LINK_SECRET";

    if ($secure_link = "") {
      return 403;
    }

    if ($secure_link = "0") {
      return 410;
    }

    alias /tmp/webdav/store/shared/;
  }

  # ensure the contents of this location block always match the public server /write/ location block
  location /write/ {
    dav_methods PUT;
    create_full_put_path on;

    if ( $request_method !~ ^(PUT)$ ) {
      return 405;
    }

    secure_link $arg_md5,$arg_expires;
    secure_link_md5 "$secure_link_expires$uri BLOBSTORE_SECURE_LINK_SECRET";

    if ($secure_link = "") {
      return 403;
    }

    if ($secure_link = "0") {
      return 410;
    }

    alias /tmp/webdav/store/shared/;
  }
}

# Public server
server {
  listen      127.0.0.1:12345;
  root        /tmp/webdav/store/shared/;

  # ensure the contents of this location block always match the internal server /read/ location block
  location /read/ {
    if ( $request_method !~ ^(GET|HEAD)$ ) {
      return 405;
    }

    secure_link $arg_md5,$arg_expires;
    secure_link_md5 "$secure_link_expires$uri BLOBSTORE_SECURE_LINK_SECRET";

    if ($secure_link = "") {
      return 403;
    }

    if ($secure_link = "0") {
      return 410;
    }

    alias /tmp/webdav/store/shared/;
  }

  # ensure the contents of this location block always match the internal server /write/ location block
  location /write/ {
    dav_methods PUT;
    create_full_put_path on;

    if ( $request_method !~ ^(PUT)$ ) {
      return 405;
    }

    secure_link $arg_md5,$arg_expires;
    secure_link_md5 "$secure_link_expires$uri BLOBSTORE_SECURE_LINK_SECRET";

    if ($secure_link = "") {
      return 403;
    }

    if ($secure_link = "0") {
      return 410;
    }

    alias /tmp/webdav/store/shared/;
  }
}
